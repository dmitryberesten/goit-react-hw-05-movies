{"version":3,"file":"static/js/779.9d090420.chunk.js","mappings":"8RAEaA,EAAUC,EAAAA,GAAAA,IAAH,qHAOPC,EAAeD,EAAAA,GAAAA,GAAH,wFAMZE,EAAaF,EAAAA,GAAAA,GAAH,yHAQVG,EAAiBH,EAAAA,GAAAA,GAAH,sFAKdI,EAASJ,EAAAA,GAAAA,GAAH,yFAMNK,EAASL,EAAAA,GAAAA,EAAH,6CAINM,EAAgBN,EAAAA,GAAAA,EAAH,mN,SCe1B,EAxCgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAESC,EAAAA,EAAAA,IAAkBP,GAF3B,gBAETQ,EAFS,EAETA,QACRJ,EAAWI,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDASlBJ,GACD,GAAE,CAACN,KAGF,UAACR,EAAD,YACE,SAACE,EAAD,sBAGCS,EAAQQ,QACP,SAAChB,EAAD,CAAYiB,UAAU,oBAAtB,SACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,UAAClB,EAAD,CAAgBgB,UAAU,cAA1B,WACE,UAACf,EAAD,sBAAiBiB,EAAOC,WACxB,SAACjB,EAAD,UAASgB,EAAOE,YAF2BF,EAAOG,GADnC,OAQrB,SAAClB,EAAD,8DAMP,C,mMClDKmB,EAAU,6BACVC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,kEACsCF,IAF/B,uBACtBG,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACgBC,EADhB,iCACgDK,EADhD,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMzB,GAAN,yFACLqB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACClB,EADD,oBACoBmB,EADpB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdI,EAAc,mCAAG,WAAM1B,GAAN,yFACLqB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACClB,EADD,4BAC4BmB,EAD5B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdf,EAAiB,mCAAG,WAAMP,GAAN,yFACRqB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACClB,EADD,6BAC6BmB,EAD7B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 30px;\n  padding-right: 40px;\n  padding-left: 40px;\n  padding-bottom: 40px;\n`;\n\nexport const ReviewHeader = styled.h3`\n  font-size: 25px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const ReviewList = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  flex-wrap: wrap;\n`;\n\nexport const ReviewListItem = styled.li`\n  padding-bottom: 10px;\n  border-bottom: 1px solid #d3d3d3;\n`;\n\nexport const Author = styled.h4`\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const Review = styled.p`\n  line-height: 1.3;\n`;\n\nexport const NoReviewsText = styled.p`\n  margin: 30px auto 0 auto;\n  text-align: center;\n  padding: 20px;\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n  max-width: 500px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // доступ до параметрів поточного URL\nimport { fetchMovieReviews } from '../../services/api';\nimport {\n  Author,\n  NoReviewsText,\n  Review,\n  ReviewHeader,\n  ReviewList,\n  ReviewListItem,\n  Wrapper,\n} from './Reviews.styled'; // додаємо стилі\n\nconst Reviews = () => {\n  const { movieId } = useParams(); // додаємо доступ до параметрів поточного URL\n  const [reviews, setReviews] = useState([]); // додаємо стейт для відгуків\n\n  // додаємо запит на відгуки\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { results } = await fetchMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      <ReviewHeader>Reviews</ReviewHeader>\n\n      {/* додаємо перевірку на наявність відгуків */}\n      {reviews.length ? (\n        <ReviewList className=\"reviews-container\">\n          {reviews.map(review => (\n            <ReviewListItem className=\"review-card\" key={review.id}>\n              <Author>Author: {review.author}</Author>\n              <Review>{review.content}</Review>\n            </ReviewListItem>\n          ))}\n        </ReviewList>\n      ) : (\n        <NoReviewsText>\n          We don't have any reviews for this movie yet.\n        </NoReviewsText>\n      )}\n    </Wrapper>\n  );\n};\nexport default Reviews;\n\n// Діма Берестень\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '28027c59bdca8e7ee28a28ecaf4d25ca'; // персональний ключ\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["Wrapper","styled","ReviewHeader","ReviewList","ReviewListItem","Author","Review","NoReviewsText","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","fetchMovieReviews","results","console","log","length","className","map","review","author","content","id","baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieById","fetchMovieCast"],"sourceRoot":""}